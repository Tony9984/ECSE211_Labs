package ca.mcgill.ecse211.lab1;

import static ca.mcgill.ecse211.lab1.Resources.*;

public class PController extends UltrasonicController {

  private static final int MOTOR_SPEED = 200;

  public PController() {
    LEFT_MOTOR.setSpeed(MOTOR_SPEED); // Initialize motor rolling forward
    RIGHT_MOTOR.setSpeed(MOTOR_SPEED);
    LEFT_MOTOR.forward();
    RIGHT_MOTOR.forward();
  }

  @Override
  public void processUSData(int distance) {
    filter(distance);

    // TODO: process a movement based on the us distance passed in (P style)

    // Calculate the gain constant

    int error = BAND_CENTER - distance;
    
    double gain_constant = Math.abs(error) > 500 ? 0 : error * 1.7;

    // Apply corrections to turn towards the wall if too far

    if (distance > BAND_WIDTH + BAND_CENTER) {
      LEFT_MOTOR.setSpeed((int)(MOTOR_LOW - gain_constant)); 
      RIGHT_MOTOR.setSpeed((int)(MOTOR_HIGH + gain_constant));
      LEFT_MOTOR.forward();
      RIGHT_MOTOR.forward();
    }

    // Apply corrections to turn away from the wall if too close

    else if (distance < BAND_CENTER - BAND_WIDTH) {
      LEFT_MOTOR.setSpeed((int)(MOTOR_HIGH + gain_constant)); 
      RIGHT_MOTOR.setSpeed((int)(MOTOR_LOW - gain_constant));
      LEFT_MOTOR.forward();
      RIGHT_MOTOR.backward();
    }

    // Move forward if the error is within the threshold

    else {
      
      LEFT_MOTOR.setSpeed(MOTOR_HIGH); 
      RIGHT_MOTOR.setSpeed(MOTOR_HIGH);
      LEFT_MOTOR.forward();
      RIGHT_MOTOR.forward();

    }

  }


  @Override
  public int readUSDistance() {
    return this.distance;
  }

}
