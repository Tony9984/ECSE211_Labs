package ca.mcgill.ecse211.lab1;

import static ca.mcgill.ecse211.lab1.Resources.*;

public class PController extends UltrasonicController {

  private static final int MOTOR_SPEED = 200;

  public PController() {
    LEFT_MOTOR.setSpeed(MOTOR_SPEED); // Initialize motor rolling forward
    RIGHT_MOTOR.setSpeed(MOTOR_SPEED);
    LEFT_MOTOR.forward();
    RIGHT_MOTOR.forward();
  }

  @Override
  public void processUSData(int distance) {
    filter(distance);

    // TODO: process a movement based on the us distance passed in (P style)

    // Compute the error

    int distError = BAND_CENTER - this.distance;
    
    // Compute C
    
    int C = Math.abs(distError) * 4;

    // Move forward if the error is within the threshold

    if (Math.abs(distError) <= BAND_WIDTH) {
      LEFT_MOTOR.setSpeed(MOTOR_HIGH);
      RIGHT_MOTOR.setSpeed(MOTOR_HIGH);
      LEFT_MOTOR.forward();
      RIGHT_MOTOR.forward();
    }

    // Apply corrections to turn away from the wall if too close

    else if (distError > 0) {
      LEFT_MOTOR.setSpeed(MOTOR_HIGH + C); 
      RIGHT_MOTOR.setSpeed(MOTOR_HIGH - C);
      LEFT_MOTOR.forward();
      RIGHT_MOTOR.forward();
    }

    // Apply corrections to turn towards the wall if too far

    else if (distError < 0) {
      LEFT_MOTOR.setSpeed(MOTOR_HIGH - C);
      RIGHT_MOTOR.setSpeed(MOTOR_HIGH + C);
      LEFT_MOTOR.forward();
      RIGHT_MOTOR.forward();
    }
  }

  @Override
  public int readUSDistance() {
    return this.distance;
  }

}
