package ca.mcgill.ecse211.lab3;

import static ca.mcgill.ecse211.lab3.Resources.*;
/**
 * This class implements methods for the navigation of the robot through waypoints
 * @author Tony
 *
 */

public class Navigation extends Thread {
  
  private static boolean navigating = false;
  
  public void travelTo(double x, double y) {
    
    double dx, dy, displacement, theta;
    double currentPosition[] = odometer.getXYT();
    
    leftMotor.stop();
    rightMotor.stop();
    leftMotor.setAcceleration(ACCELERATION);
    rightMotor.setAcceleration(ACCELERATION);
    
    navigating = true;
    
    dx = x - currentPosition[0];
    dy = y - currentPosition[1];
    displacement = Math.hypot(dx, dy);
    theta = Math.atan2(dy, dx);
    
    leftMotor.setSpeed(ROTATE_SPEED);
    rightMotor.setSpeed(ROTATE_SPEED);
    turnTo(theta);
    
    leftMotor.setSpeed(FORWARD_SPEED);
    rightMotor.setSpeed(FORWARD_SPEED);
    leftMotor.rotate(distanceToRotations(displacement));
    rightMotor.rotate(distanceToRotations(displacement));
  }
  
  private int distanceToRotations(double distance) {
    int rotations = (int) (180 * distance / (Math.PI * WHEEL_RAD));
    return rotations;
  }
  
  public void turnTo(double theta) {
    
    leftMotor.rotate(radToDeg(turnAngle));
    rightMotor.rotate(-radToDegree(turnAngle));
    
  }
  
  private int radToDeg(double angle) {
    int rotations = distanceToRotations(TRACK * angle / 2);
    return rotations;
  }
  
  public boolean isNavigating() {
    return navigating;
  }
  
}
